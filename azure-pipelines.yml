trigger:
- master
- develop
- release/*

strategy:
  matrix:
    windows-stable:
      imageName: 'windows-latest'
      rustup_toolchain: stable
    mac-stable:
      imageName: 'macos-latest'
      rustup_toolchain: stable
    linux-stable:
      imageName: 'ubuntu-latest'
      rustup_toolchain: stable

pool:
  vmImage: $(imageName)

steps:
#  - script: |
#      choco install bonjour
#    displayName: Install Windows dependencies
#    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-host x86_64-pc-windows-msvc
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      sudo apt install -y libavahi-compat-libdnssd-dev libavahi-compat-libdnssd1
    displayName: Install Linux dependencies
    condition: eq( variables['Agent.OS'], 'Linux' )
  - script: cargo build --all
    displayName: Cargo build
  - script: cargo test --all
    displayName: Cargo test
    condition: ne( variables['Agent.OS'], 'Linux' ) # disable linux testing until we fix it
